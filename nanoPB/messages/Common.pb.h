/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_PROTOS_COMMON_PB_H_INCLUDED
#define PB_PROTOS_COMMON_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _BoardErrorCode {
    BoardErrorCode_NO_ERROR = 0,
    BoardErrorCode_GENERIC_ERROR = 1
} BoardErrorCode;

/* Struct definitions */
typedef struct _BoardStatus {
    uint32_t board_timestamp;
    float temperature;
    BoardErrorCode error_code;
    uint32_t firmware_version;
} BoardStatus;

typedef struct _WatchdogConfig {
    bool enabled;
    uint32_t timeout;
} WatchdogConfig;

typedef struct _WatchdogStatus {
    bool state;
    uint32_t last_ping_timestamp;
    uint32_t last_ping_period;
    uint32_t max_period;
} WatchdogStatus;

typedef struct _EmergencyStop {
    bool state;
} EmergencyStop;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _BoardErrorCode_MIN BoardErrorCode_NO_ERROR
#define _BoardErrorCode_MAX BoardErrorCode_GENERIC_ERROR
#define _BoardErrorCode_ARRAYSIZE ((BoardErrorCode)(BoardErrorCode_GENERIC_ERROR+1))

#define BoardStatus_error_code_ENUMTYPE BoardErrorCode





/* Initializer values for message structs */
#define BoardStatus_init_default                 {0, 0, _BoardErrorCode_MIN, 0}
#define WatchdogConfig_init_default              {0, 0}
#define WatchdogStatus_init_default              {0, 0, 0, 0}
#define EmergencyStop_init_default               {0}
#define BoardStatus_init_zero                    {0, 0, _BoardErrorCode_MIN, 0}
#define WatchdogConfig_init_zero                 {0, 0}
#define WatchdogStatus_init_zero                 {0, 0, 0, 0}
#define EmergencyStop_init_zero                  {0}

/* Field tags (for use in manual encoding/decoding) */
#define BoardStatus_board_timestamp_tag          1
#define BoardStatus_temperature_tag              2
#define BoardStatus_error_code_tag               3
#define BoardStatus_firmware_version_tag         4
#define WatchdogConfig_enabled_tag               1
#define WatchdogConfig_timeout_tag               2
#define WatchdogStatus_state_tag                 1
#define WatchdogStatus_last_ping_timestamp_tag   2
#define WatchdogStatus_last_ping_period_tag      3
#define WatchdogStatus_max_period_tag            4
#define EmergencyStop_state_tag                  1

/* Struct field encoding specification for nanopb */
#define BoardStatus_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   board_timestamp,   1) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       2) \
X(a, STATIC,   REQUIRED, UENUM,    error_code,        3) \
X(a, STATIC,   REQUIRED, UINT32,   firmware_version,   4)
#define BoardStatus_CALLBACK NULL
#define BoardStatus_DEFAULT NULL

#define WatchdogConfig_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     enabled,           1) \
X(a, STATIC,   REQUIRED, UINT32,   timeout,           2)
#define WatchdogConfig_CALLBACK NULL
#define WatchdogConfig_DEFAULT NULL

#define WatchdogStatus_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     state,             1) \
X(a, STATIC,   REQUIRED, UINT32,   last_ping_timestamp,   2) \
X(a, STATIC,   REQUIRED, UINT32,   last_ping_period,   3) \
X(a, STATIC,   REQUIRED, UINT32,   max_period,        4)
#define WatchdogStatus_CALLBACK NULL
#define WatchdogStatus_DEFAULT NULL

#define EmergencyStop_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     state,             1)
#define EmergencyStop_CALLBACK NULL
#define EmergencyStop_DEFAULT NULL

extern const pb_msgdesc_t BoardStatus_msg;
extern const pb_msgdesc_t WatchdogConfig_msg;
extern const pb_msgdesc_t WatchdogStatus_msg;
extern const pb_msgdesc_t EmergencyStop_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define BoardStatus_fields &BoardStatus_msg
#define WatchdogConfig_fields &WatchdogConfig_msg
#define WatchdogStatus_fields &WatchdogStatus_msg
#define EmergencyStop_fields &EmergencyStop_msg

/* Maximum encoded size of messages (where known) */
#define BoardStatus_size                         19
#define EmergencyStop_size                       2
#define PROTOS_COMMON_PB_H_MAX_SIZE              WatchdogStatus_size
#define WatchdogConfig_size                      8
#define WatchdogStatus_size                      20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif

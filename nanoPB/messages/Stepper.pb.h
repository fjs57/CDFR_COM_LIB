/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_PROTOS_STEPPER_PB_H_INCLUDED
#define PB_PROTOS_STEPPER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _StepperErrorCode {
    StepperErrorCode_NO_ERROR = 0,
    StepperErrorCode_GENERIC_ERROR = 1
} StepperErrorCode;

typedef enum _StepperControlModes {
    StepperControlModes_INHIBITED = 0,
    StepperControlModes_SPEED = 1,
    StepperControlModes_POSITION = 2,
    StepperControlModes_GANTRY = 3
} StepperControlModes;

/* Struct definitions */
typedef struct _StepperEnable {
    bool enable;
} StepperEnable;

typedef struct _StepperMode {
    StepperControlModes control_mode;
    bool force;
} StepperMode;

typedef struct _StepperTelemetry {
    bool stallguard_state;
} StepperTelemetry;

typedef struct _StepperSpeed {
    float speed;
} StepperSpeed;

typedef struct _StepperPosition {
    double position;
} StepperPosition;

typedef struct _StepperConfig {
    uint32_t update_period;
    float acceleration;
    float max_speed;
    double min_position;
    double max_position;
    bool enable_position_limits;
    float current;
    bool enable_watchdog_activation;
    uint32_t enable_watchdog_timeout;
} StepperConfig;

typedef struct _StepperStatus {
    StepperErrorCode error_code;
    uint32_t enable_watchdog_last_ping_timestamp;
    bool enable_watchdog_state;
} StepperStatus;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _StepperErrorCode_MIN StepperErrorCode_NO_ERROR
#define _StepperErrorCode_MAX StepperErrorCode_GENERIC_ERROR
#define _StepperErrorCode_ARRAYSIZE ((StepperErrorCode)(StepperErrorCode_GENERIC_ERROR+1))

#define _StepperControlModes_MIN StepperControlModes_INHIBITED
#define _StepperControlModes_MAX StepperControlModes_GANTRY
#define _StepperControlModes_ARRAYSIZE ((StepperControlModes)(StepperControlModes_GANTRY+1))


#define StepperMode_control_mode_ENUMTYPE StepperControlModes





#define StepperStatus_error_code_ENUMTYPE StepperErrorCode


/* Initializer values for message structs */
#define StepperEnable_init_default               {0}
#define StepperMode_init_default                 {_StepperControlModes_MIN, 0}
#define StepperTelemetry_init_default            {0}
#define StepperSpeed_init_default                {0}
#define StepperPosition_init_default             {0}
#define StepperConfig_init_default               {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define StepperStatus_init_default               {_StepperErrorCode_MIN, 0, 0}
#define StepperEnable_init_zero                  {0}
#define StepperMode_init_zero                    {_StepperControlModes_MIN, 0}
#define StepperTelemetry_init_zero               {0}
#define StepperSpeed_init_zero                   {0}
#define StepperPosition_init_zero                {0}
#define StepperConfig_init_zero                  {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define StepperStatus_init_zero                  {_StepperErrorCode_MIN, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define StepperEnable_enable_tag                 1
#define StepperMode_control_mode_tag             1
#define StepperMode_force_tag                    2
#define StepperTelemetry_stallguard_state_tag    1
#define StepperSpeed_speed_tag                   1
#define StepperPosition_position_tag             1
#define StepperConfig_update_period_tag          1
#define StepperConfig_acceleration_tag           2
#define StepperConfig_max_speed_tag              3
#define StepperConfig_min_position_tag           4
#define StepperConfig_max_position_tag           5
#define StepperConfig_enable_position_limits_tag 6
#define StepperConfig_current_tag                7
#define StepperConfig_enable_watchdog_activation_tag 8
#define StepperConfig_enable_watchdog_timeout_tag 9
#define StepperStatus_error_code_tag             1
#define StepperStatus_enable_watchdog_last_ping_timestamp_tag 2
#define StepperStatus_enable_watchdog_state_tag  3

/* Struct field encoding specification for nanopb */
#define StepperEnable_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     enable,            1)
#define StepperEnable_CALLBACK NULL
#define StepperEnable_DEFAULT NULL

#define StepperMode_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    control_mode,      1) \
X(a, STATIC,   REQUIRED, BOOL,     force,             2)
#define StepperMode_CALLBACK NULL
#define StepperMode_DEFAULT NULL

#define StepperTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     stallguard_state,   1)
#define StepperTelemetry_CALLBACK NULL
#define StepperTelemetry_DEFAULT NULL

#define StepperSpeed_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    speed,             1)
#define StepperSpeed_CALLBACK NULL
#define StepperSpeed_DEFAULT NULL

#define StepperPosition_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   position,          1)
#define StepperPosition_CALLBACK NULL
#define StepperPosition_DEFAULT NULL

#define StepperConfig_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   update_period,     1) \
X(a, STATIC,   REQUIRED, FLOAT,    acceleration,      2) \
X(a, STATIC,   REQUIRED, FLOAT,    max_speed,         3) \
X(a, STATIC,   REQUIRED, DOUBLE,   min_position,      4) \
X(a, STATIC,   REQUIRED, DOUBLE,   max_position,      5) \
X(a, STATIC,   REQUIRED, BOOL,     enable_position_limits,   6) \
X(a, STATIC,   REQUIRED, FLOAT,    current,           7) \
X(a, STATIC,   REQUIRED, BOOL,     enable_watchdog_activation,   8) \
X(a, STATIC,   REQUIRED, UINT32,   enable_watchdog_timeout,   9)
#define StepperConfig_CALLBACK NULL
#define StepperConfig_DEFAULT NULL

#define StepperStatus_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    error_code,        1) \
X(a, STATIC,   REQUIRED, UINT32,   enable_watchdog_last_ping_timestamp,   2) \
X(a, STATIC,   REQUIRED, BOOL,     enable_watchdog_state,   3)
#define StepperStatus_CALLBACK NULL
#define StepperStatus_DEFAULT NULL

extern const pb_msgdesc_t StepperEnable_msg;
extern const pb_msgdesc_t StepperMode_msg;
extern const pb_msgdesc_t StepperTelemetry_msg;
extern const pb_msgdesc_t StepperSpeed_msg;
extern const pb_msgdesc_t StepperPosition_msg;
extern const pb_msgdesc_t StepperConfig_msg;
extern const pb_msgdesc_t StepperStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define StepperEnable_fields &StepperEnable_msg
#define StepperMode_fields &StepperMode_msg
#define StepperTelemetry_fields &StepperTelemetry_msg
#define StepperSpeed_fields &StepperSpeed_msg
#define StepperPosition_fields &StepperPosition_msg
#define StepperConfig_fields &StepperConfig_msg
#define StepperStatus_fields &StepperStatus_msg

/* Maximum encoded size of messages (where known) */
#define PROTOS_STEPPER_PB_H_MAX_SIZE             StepperConfig_size
#define StepperConfig_size                       49
#define StepperEnable_size                       2
#define StepperMode_size                         4
#define StepperPosition_size                     9
#define StepperSpeed_size                        5
#define StepperStatus_size                       10
#define StepperTelemetry_size                    2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
